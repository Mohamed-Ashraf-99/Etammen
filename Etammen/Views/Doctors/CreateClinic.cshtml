@using DataAccessLayerEF.Enums
@model Etammen.ViewModels.ClinicViewModel

@{
    ViewData["Title"] = "CreateClinic";
}
@inject BusinessLogicLayer.Interfaces.IUnitOfWork _unitOfWork
@{
    string[] includes = { "Clinics", "DoctorReviews", "ApplicationUser" };

    int id = ViewBag.doctorId;
    var doctors = await _unitOfWork.Doctors.FindBy(d => d.Id == id, includes);
    var fullName = $"{doctors.ApplicationUser.FirstName} {doctors.ApplicationUser.LastName}";

    var openingDaysValues = Enum.GetValues(typeof(OpeningDays)).Cast<OpeningDays>();
}

<h1>CreateClinic</h1>

<h4>Clinic</h4>
<hr />
<div class="row" style="margin-left:5px">
    <div class="col-md-4">
        <form asp-action="CreateClinic">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DoctorId" value="@id" />
            <input type="hidden" asp-for="Id" value="0" />
            <div class="form-group">
                <label asp-for="DoctorId" class="control-label">Doctor Name</label>
                <input asp-for="DoctorName" readonly class="form-control" value="@fullName" />
            </div>

            <partial name="Partial/_CreateAndEditClinicPartialView.cshtml" />

            <div class="form-group">
                <label asp-for="OpeningDays" class="control-label">Opening Days</label>
                <div>
                    @foreach (var day in openingDaysValues)
                    {
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="OpeningDays" value="@day" /> @day
                            </label>
                        </div>
                    }
                </div>
                <span asp-validation-for="OpeningDays" class="text-danger"></span>
                <br />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" /> |
                <a asp-action="ClinicIndex" class="btn btn-outline-primary">Back to List</a>

            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
